---
name: Test & Build

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test:
    uses: ./.github/workflows/test.yml

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: test

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Branch name
        run: echo "${GITHUB_REF##*/}"

      - name: Get the release version from the tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - run: sudo apt -y install musl-dev musl-tools
        if: matrix.build == 'linux'

      - name: Build Linux
        run: |
          cargo build --release --locked --target ${{ matrix.target }} --features "openssl/vendored"
        if: matrix.build == 'linux'

      - name: Build
        run: |
          cargo build --release --locked --target ${{ matrix.target }}
        if: matrix.build != 'linux'

  packages:
    name: package
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Extract branch name
        id: branch
        run: echo "::set-output name=BRANCH_NAME::${GITHUB_REF##*/}"

      - name: Check if branch is main
        run: |
          if [ "${{ steps.branch.outputs.BRANCH_NAME }}" == "main" ]; then
            echo "The branch is main, stopping the workflow."
            exit 0
          fi

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        run: |-
          IMAGE_TAG=${{ github.sha }}

          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 \
          -t ghcr.io/${{ github.repository }}/${{ github.repository }}-${{ steps.branch.outputs.BRANCH_NAME }}:latest \
          -t ghcr.io/${{ github.repository }}/${{ github.repository }}-${{ steps.branch.outputs.BRANCH_NAME }}:$IMAGE_TAG .
          docker push ghcr.io/${{ github.repository }}/${{ github.repository }}-${{ steps.branch.outputs.BRANCH_NAME }}:latest
          docker push ghcr.io/${{ github.repository }}/${{ github.repository }}-${{ steps.branch.outputs.BRANCH_NAME }}:$IMAGE_TAG
